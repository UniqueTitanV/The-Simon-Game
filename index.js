

// An array of button colours
var buttonColours = ["red", "blue", "green", "yellow"];

// An empty array that will hold the sequence of colors generated by the game
var gamePattern = [];

// An empty array that will hold the sequence of colors clicked by the user
var userClickedPattern = [];

// A true/false variable that will keep track of whether the game has started or not
var started = false;

// The initial level of the game
var level = 0;

// When a key is pressed, start the game if it hasn't started already
$(document).keypress(function(){
  if (!started){

    // Change the h1 title text to show the level
    $("#level-title").text("level " + level);
    nextSequence();
    started = true;
  }
});

// When a button is clicked by the user
$(".btn").click(function() {

  // Get the id of the button clicked by the user
  var userChosenColour = $(this).attr("id");

  // Add the clicked color to the user's sequence
  userClickedPattern.push(userChosenColour);

  // Play the sound of the clicked color
  playSound(userChosenColour);

  // Add a visual animation for the clicked color
  animatePress(userChosenColour);
  // Checks users answers
  checkAnswer(userClickedPattern.length - 1);
})

// Generate the next color sequence
function nextSequence() {
  
  // resets the user's sequence making the combination possible, otherwise it would only remember the last button and not the entire sequence
   userClickedPattern = [];

  // Increment the level by 1
  level++;

  // Change the h1 title text to show the level
  $("#level-title").text("Level " + level);

  // Generate a random number between 0 and 3
  var randomNumber  = Math.floor(Math.random() * 4);

  // Choose a random color from the buttonColours array using the random number generated
  var randomChosenColour = buttonColours[randomNumber];

  // Add the randomly generated color to the game sequence
  gamePattern.push(randomChosenColour);
  

  // Add a visual animation for the randomly generated color
  $("#" + randomChosenColour).fadeIn(100).fadeOut(100).fadeIn(100);

  // Play the sound of the randomly generated color
  playSound(randomChosenColour);


}

// Play the sound of the color passed as an argument
let volume = 1;
let volumeSlider = document.getElementById('volume-slider');
volumeSlider.addEventListener("input", function(e) {
  volume = Number(e.currentTarget.value) / 100;
  if (volume < 0 || volume > 1 || isNaN(volume)) {
    volume = 1;
  }
});

function playSound(soundName) {
  var audio = new Audio("sounds/" + soundName + ".mp3");
  audio.volume = volume;
  audio.play();
}





// Add a visual animation for the color passed as an argument
function animatePress(currentColour)  {
  $('#' + currentColour).addClass("pressed");
// Timeout to return color animation back to normal
  setTimeout(function() {
    $('#' + currentColour).removeClass("pressed");
  }, 100);
}

// Generate new function to check answers
function checkAnswer(CurrentLevel)  {
  
  if (userClickedPattern[CurrentLevel] === gamePattern[CurrentLevel]) {
    if(userClickedPattern.length == gamePattern.length){
      setTimeout(function(){
        nextSequence();
      }, 600);
    }
  } else{
    playSound("wrong");
    $("body").addClass("game-over");
    $("#level-title").text("Game Over, press any key to restart");
    setTimeout(function(){
      $("body").removeClass("game-over");
    }, 200);
    startOver();
  }
}

function startOver(){
  level = 0;
  gamePattern = [];
  started = false;
}